{"ast":null,"code":"import { FormGroup, FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nfunction compo1Component_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El nombre no puede estar vac\\u00EDo \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction compo1Component_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" El nombre no puede tener menos de 2 letras \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction compo1Component_span_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Solo puede contener letras, minimo 6 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction compo1Component_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" La contrasenya no puede estar vac\\u00EDa \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction compo1Component_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" La contrasenya no tiene el formato correcto \");\n    i0.ɵɵelementEnd();\n  }\n}\n//import { HttpClient } from '@angular/common/http';\n//import { ValidatorService } from 'src/app/services/validator.service';\nexport class compo1Component {\n  constructor() {\n    //constructor (private http:HttpClient) {}\n    this.LoginForm = new FormGroup({\n      name: new FormControl('', [Validators.required, Validators.minLength(2), Validators.pattern('[a-zA-Zç]{6,}$')]),\n      password: new FormControl('', [Validators.required, Validators.pattern('[a-zA-Z0-9]{8,}$')])\n    });\n  }\n}\ncompo1Component.ɵfac = function compo1Component_Factory(t) {\n  return new (t || compo1Component)();\n};\ncompo1Component.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: compo1Component,\n  selectors: [[\"app-compo1\"]],\n  decls: 20,\n  vars: 7,\n  consts: [[1, \"container\", 2, \"text-align\", \"left\"], [3, \"formGroup\"], [\"type\", \"text\", \"formControlName\", \"name\"], [4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"type\", \"submit\", 3, \"disabled\"]],\n  template: function compo1Component_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h3\");\n      i0.ɵɵtext(2, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"p\");\n      i0.ɵɵtext(5, \" Nombre de usuario: \");\n      i0.ɵɵelement(6, \"br\")(7, \"input\", 2);\n      i0.ɵɵtemplate(8, compo1Component_span_8_Template, 2, 0, \"span\", 3);\n      i0.ɵɵtemplate(9, compo1Component_span_9_Template, 2, 0, \"span\", 3);\n      i0.ɵɵtemplate(10, compo1Component_span_10_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"p\");\n      i0.ɵɵtext(12, \" Contrasenya: \");\n      i0.ɵɵelement(13, \"br\")(14, \"input\", 4);\n      i0.ɵɵtemplate(15, compo1Component_span_15_Template, 2, 0, \"span\", 3);\n      i0.ɵɵtemplate(16, compo1Component_span_16_Template, 2, 0, \"span\", 3);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(17, \"button\", 5);\n      i0.ɵɵtext(18, \"Login\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelement(19, \"div\");\n    }\n    if (rf & 2) {\n      let tmp_1_0;\n      let tmp_2_0;\n      let tmp_3_0;\n      let tmp_4_0;\n      let tmp_5_0;\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.LoginForm);\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_1_0 = ctx.LoginForm.get(\"name\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]) && ((tmp_1_0 = ctx.LoginForm.get(\"name\")) == null ? null : tmp_1_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.LoginForm.get(\"name\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]) && ((tmp_2_0 = ctx.LoginForm.get(\"name\")) == null ? null : tmp_2_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_3_0 = ctx.LoginForm.get(\"name\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"pattern\"]) && ((tmp_3_0 = ctx.LoginForm.get(\"name\")) == null ? null : tmp_3_0.touched));\n      i0.ɵɵadvance(5);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.LoginForm.get(\"password\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"required\"]) && ((tmp_4_0 = ctx.LoginForm.get(\"password\")) == null ? null : tmp_4_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ((tmp_5_0 = ctx.LoginForm.get(\"password\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"pattern\"]) && ((tmp_5_0 = ctx.LoginForm.get(\"password\")) == null ? null : tmp_5_0.touched));\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", ctx.LoginForm.invalid);\n    }\n  },\n  dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"AACA,SAASA,SAAS,EAAEC,WAAW,EAACC,UAAU,QAAO,gBAAgB;;;;;;ICQrDC,4BAC6C;IACzCA,qDACJ;IAAAA,iBAAO;;;;;IACPA,4BAC6C;IACzCA,4DACJ;IAAAA,iBAAO;;;;;IAEPA,4BAC6C;IACzCA,sDACJ;IAAAA,iBAAO;;;;;IAOPA,4BACiD;IAC7CA,0DACJ;IAAAA,iBAAO;;;;;IAEPA,4BACiD;IAC7CA,6DACJ;IAAAA,iBAAO;;;ADlCnB;AACA;AAQA,OAAM,MAAOC,eAAe;EAN5BC;IAQE;IAEA,cAAS,GAAE,IAAIL,SAAS,CAAC;MAGvBM,IAAI,EAAC,IAAIL,WAAW,CAAC,EAAE,EAAC,CACtBC,UAAU,CAACK,QAAQ,EACnBL,UAAU,CAACM,SAAS,CAAC,CAAC,CAAC,EACvBN,UAAU,CAACO,OAAO,CAAC,gBAAgB,CAAC,CACrC,CAAC;MAEFC,QAAQ,EAAC,IAAIT,WAAW,CAAC,EAAE,EAAC,CAC1BC,UAAU,CAACK,QAAQ,EACnBL,UAAU,CAACO,OAAO,CAAC,kBAAkB,CAAC,CACvC;KAEF,CAAC;;;AAlBSL,eAAe;mBAAfA,eAAe;AAAA;AAAfA,eAAe;QAAfA,eAAe;EAAAO;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCX5BZ,8BAAiD;MACzCA,qBAAK;MAAAA,iBAAK;MAEdA,+BAA8B;MAGtBA,oCAAmB;MAAAA,qBAAI;MAGvBA,kEAGO;MACPA,kEAGO;MAEPA,oEAGO;MAEXA,iBAAI;MAEJA,0BAAG;MAACA,+BAAa;MAAAA,sBAAI;MAGjBA,oEAGO;MAEPA,oEAGO;MACXA,iBAAI;MAGJA,kCAAqD;MAAAA,sBAAK;MAAAA,iBAAS;MAG3EA,uBAAK;;;;;;;;MAxCKA,eAAuB;MAAvBA,yCAAuB;MAMbA,eACmC;MADnCA,sNACmC;MAGlCA,eACkC;MADlCA,uNACkC;MAIlCA,eACkC;MADlCA,qNACkC;MASnCA,eACuC;MADvCA,8NACuC;MAItCA,eACsC;MADtCA,6NACsC;MAM7BA,eAA8B;MAA9BA,gDAA8B","names":["FormGroup","FormControl","Validators","i0","compo1Component","constructor","name","required","minLength","pattern","password","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/denys/public_html/CineLike/angular/src/app/components/compo1/compo1.component.ts","/home/denys/public_html/CineLike/angular/src/app/components/compo1/compo1.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { FormGroup, FormControl,Validators} from '@angular/forms';\n//import { HttpClient } from '@angular/common/http';\n//import { ValidatorService } from 'src/app/services/validator.service';\n\n@Component({\n  selector: 'app-compo1',\n  templateUrl: './compo1.component.html',\n  styleUrls: ['./compo1.component.css']\n})\n\nexport class compo1Component   {\n  \n  //constructor (private http:HttpClient) {}\n\n  LoginForm =new FormGroup({\n  \n\n    name:new FormControl('',[\n      Validators.required,\n      Validators.minLength(2),\n      Validators.pattern('[a-zA-Zç]{6,}$')\n    ]),\n\n    password:new FormControl('',[\n      Validators.required,\n      Validators.pattern('[a-zA-Z0-9]{8,}$')\n    ])\n\n  });\n\n  //constructor(private ValidatorService : ValidatorService){\n//    this.name = this.ValidatorService.getData();\n//\n//  }\n}\n","<div class=\"container\" style=\"text-align: left;\"> \n    <h3>Login</h3>\n    <!--<form [formGroup]=\"miform\" (ngSubmit)=\"onSubmit()\">-->\n    <form [formGroup]=\"LoginForm\">\n\n        <!-- Nombre -->\n        <p> Nombre de usuario: <br>\n            <input type=\"text\" formControlName=\"name\">\n\n            <span  *ngIf=\"this.LoginForm.get('name')?.errors?.['required'] && \n                    this.LoginForm.get('name')?.touched\">\n                El nombre no puede estar vacío\n            </span>\n            <span   *ngIf=\"this.LoginForm.get('name')?.errors?.['minlength']&& \n                    this.LoginForm.get('name')?.touched\">\n                El nombre no puede tener menos de 2 letras\n            </span>\n\n            <span   *ngIf=\"this.LoginForm.get('name')?.errors?.['pattern'] && \n                    this.LoginForm.get('name')?.touched\">\n                Solo puede contener letras, minimo 6\n            </span>\n        \n        </p>\n\n        <p> Contrasenya: <br>\n            <input type=\"password\" formControlName=\"password\">\n\n            <span  *ngIf=\"this.LoginForm.get('password')?.errors?.['required'] && \n                    this.LoginForm.get('password')?.touched\">\n                La contrasenya no puede estar vacía\n            </span>\n\n            <span   *ngIf=\"this.LoginForm.get('password')?.errors?.['pattern'] && \n                    this.LoginForm.get('password')?.touched\">\n                La contrasenya no tiene el formato correcto\n            </span>\n        </p>\n\n\n        <button type=\"submit\" [disabled]=\"LoginForm.invalid\">Login</button>\n    </form>\n</div>\n<div>   \n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}